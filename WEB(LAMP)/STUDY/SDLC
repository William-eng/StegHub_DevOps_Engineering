Software development life cycle (SDLC) is a structured process that is used to design, develop, and test good-quality software. 
SDLC, or software development life cycle, is a methodology that defines the entire procedure of software development step-by-step. 
The SDLC Model involves six phases or stages while developing any software.

i) Plan: This typically includes resource allocation, capacity planning, project scheduling, cost estimation, and provisioning.
ii) Coding: The coding phase includes system design in an integrated development environment. It also includes static code analysis and code review for multiple types of devices.
iii) Implement: The implementation phase takes the code requirements determined earlier and uses those to begin actually building the software.
iv) Test: The testing team evaluates the developed product(s) in order to assess whether they meet the requirements specified in the ‘planning’ phase.
v) Deploy: In the deployment phase, the software is officially released into the production environment. 
vi) Monitoring: In the monitor phase, various elements of the software are monitored. These could include the overall system performance, user experience, new security vulnerabilities, an analysis of bugs or errors in the system.

What are the SDLC Models:
i) Waterfall: Waterfall represents the oldest, simplest, and most structured methodology. Each phase depends on the outcome of the previous phase, and all phases run sequentially. 
ii) Iterative: In the iterative process, each development cycle produces an incomplete but deployable version of the software.
iii) Spiral: In the spiral development model, the development process is driven by the unique risk patterns of a project. and iv) Agile: The agile methodology produces ongoing release cycles, each featuring small, incremental changes from the previous release. 
